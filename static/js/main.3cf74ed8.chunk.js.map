{"version":3,"sources":["components/LoadingComponent.js","components/FilterBarComponent.js","components/SearchComponent.js","components/PlayComponent.js","components/QADetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/reducers.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","msg","className","FilterBar","props","toggle","bind","catSelected","state","dropdownOpen","this","setState","prevState","e","preventDefault","newCat","currentTarget","innerText","console","log","appProps","filterQAs","JSON","stringify","items","Set","qas","map","qa","category","title","sort","cat","key","onClick","isOpen","caret","React","Component","RenderQAItem","to","id","question","Search","selectedCat","results","filter","t","isLoading","errMess","catId","row","value","CategoryBar","cats","Play","catQAs","r","c","push","RenderQA","answer","airdate","QADetail","Header","isNavOpen","toggleNav","dark","expand","href","navbar","Footer","serviceUrl","fetchCatQAs","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","addCatQAs","catch","qasFailed","qasLoading","f","type","payload","errmess","addQAs","catLoading","addCats","Main","fetchQAs","fetchCats","location","classNames","timeout","exact","path","component","match","parseInt","params","qaId","withRouter","connect","n","QAs","action","Cats","CatQAs","a","b","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cf74ed8.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = ({msg}) => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading {msg}. . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass FilterBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.catSelected = this.catSelected.bind(this);\n    this.state = { dropdownOpen: false };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  catSelected(e) {\n    e.preventDefault();\n    const newCat = e.currentTarget.innerText;\n    console.log(\"FilterBar new cat: \" + newCat)\n    this.props.appProps.filterQAs(newCat);\n  }\n\n  render() {\n    console.log(\"filterBar rendering:\" + JSON.stringify(this.state));\n    const categories = [...new Set(this.props.appProps.qas.qas.map((qa)=>qa.category.title))];\n    const items = categories.sort().map((cat) => (\n        <DropdownItem key={cat} onClick={this.catSelected}>{cat}</DropdownItem>\n    ));\n    return (\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret> Category </DropdownToggle>\n            <DropdownMenu>\n                {items}\n            </DropdownMenu>\n        </Dropdown>\n    );\n  }\n}\n\nexport default FilterBar;","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport FilterBar from './FilterBarComponent';\n\nconst RenderQAItem = ({ qa }) => (\n    <Card>\n        <Link to={`/search/${qa.id}`} >\n            <center>\n                {qa.category.title}\n            </center>\n            <CardBody>\n                {qa.question}\n            </CardBody>\n        </Link>\n    </Card>\n);\n\nconst Search = ({ appProps }) => {\n    const selectedCat = appProps.qas.selectedCat;\n    console.log(\"search render cat : \" + selectedCat)\n    const results = appProps.qas.qas\n        .filter((qa) => {\n            const t = qa.category.title;\n            return qa.question !== '' && (!selectedCat || selectedCat === t);\n        })\n        .map((qa) => (\n            <div className=\"question col-lg-3 col-md-6 col-12\" key={qa.id}>\n                <RenderQAItem qa={qa} />\n            </div>\n        ));\n\n    if (appProps.qas.isLoading) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n\n    if (appProps.qas.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{appProps.qas.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"filterBar row\">\n                <FilterBar appProps={appProps}></FilterBar>\n            </div>\n            <div className=\"row\">\n                {results}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\n\nconst NUM_CAT = 6;\n\nconst RenderQAItem = ({ catId, row, qa }) => (\n    <Card className=\"value col-2\">\n        <Link to={`/play/${catId}/${row}`} >\n            <CardBody> <center> $ {qa.value} </center> </CardBody>\n        </Link>\n    </Card>\n);\n\nconst CategoryBar = ({ cats }) => cats.map((cat) => (\n    <Card className=\"category col-2\" key={cat.id}>\n        <CardBody > {cat.title}</CardBody>\n    </Card>\n));\n\nconst Play = ({ appProps }) => {\n    console.log(\"play render \" + JSON.stringify(appProps.catQAs));\n    if (appProps.cats.isLoading)\n        return (<div className=\"container\"> <div className=\"row\"> <Loading msg=\"Categories\" /> </div> </div>);\n\n    if (appProps.catQAs.isLoading)\n        return (<div className=\"container\"> <div className=\"row\"> <Loading msg=\"Categories Questions\" /> </div> </div>);\n\n    if (appProps.cats.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{appProps.qas.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    const results = [];\n    for (let r = 0; r < 5; r++) {\n        for (let c = 0; c < 6; c++) {\n            const catId = appProps.cats.cats[c].id;\n            if (appProps.catQAs) {\n                const qas = appProps.catQAs.catQAs['c' + catId];\n                if (qas)\n                    results.push((\n                        <RenderQAItem catId={catId} row={r} qa={qas[r]} />\n                    ));\n            }\n        };\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"categoryBar row\">\n                <CategoryBar cats={appProps.cats.cats}></CategoryBar>\n            </div>\n            <div className=\"row\">\n                {results}\n            </div>\n        </div>\n    );\n}\n\nexport default Play;","import React from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\n\nfunction RenderQA({qa}) {\n    return (\n        /*<FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>*/\n            <Card>\n                <CardHeader className=\"bg-primary text-white\"><b>{qa.question}</b></CardHeader>\n                <CardBody>\n                    <dl className=\"row p-1\">\n                        <dt className=\"col-6\">Answer</dt>\n                        <dd className=\"col-6\"><b>{qa.answer}</b></dd>\n                        <dt className=\"col-6\">Category</dt>\n                        <dd className=\"col-6\">{qa.category.title}</dd>\n                        <dt className=\"col-6\">Value</dt>\n                        <dd className=\"col-6\">{qa.value}</dd>\n                        <dt className=\"col-6\">Air Date</dt>\n                        <dd className=\"col-6\">{qa.airdate}</dd>\n                    </dl>\n                </CardBody>\n            </Card>\n        /*</FadeTransform> */\n    );\n}\n\nconst QADetail = props => \n    (\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"question col-12\">\n                <RenderQA qa={props.qa} />\n            </div>\n        </div>\n        </div>\n    );\n\nexport default QADetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, pullRight } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand href=\"/jeopardy/\"><b>Jeopardy!</b></NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/search'>\n                                    <span className=\"fa fa-search fa-lg\"></span>\n                                    Browse\n                                    </NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/play'>\n                                    <span className=\"fa fa-gamepad fa-lg\"></span>\n                                    Play\n                                    </NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </div>\n            </Navbar >\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto text-white\">\n                    <p>Developed by Rachel Lu</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","export const baseUrl = 'http://localhost:3001/';\nexport const serviceUrl = 'https://cors-anywhere.herokuapp.com/http://jservice.io/';","import * as ActionTypes from './ActionTypes';\nimport { serviceUrl } from '../shared/baseUrl';\n\nexport const fetchQAs = () => (dispatch) => {\n    dispatch(qasLoading(true));\n\n    return fetch(serviceUrl + 'api/clues')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } \n        var error = new Error('Fetching questions error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(qas => dispatch(addQAs(qas)))\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const fetchCats = (n) => (dispatch) => {\n    dispatch(catLoading(true));\n    return fetch(serviceUrl + 'api/categories?count='+(n?n:6))\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } \n        var error = new Error('Fetching categories error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(cats => {\n      cats.map((cat) => dispatch(fetchCatQAs(cat.id)));\n      return dispatch(addCats(cats));\n    })\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const fetchCatQAs = (catId) => (dispatch) => {\n    return fetch(serviceUrl + 'api/clues?category='+catId)\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } \n        var error = new Error('Fetching categories question error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(qas => dispatch(addCatQAs(catId, qas)))\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const qasLoading = (f) => ({ type: ActionTypes.QAS_LOADING, payload: f });\nexport const qasFailed = (errmess) => ({ type: ActionTypes.QAS_FAILED, payload: errmess });\nexport const addQAs = (qas) => ({ type: ActionTypes.QAS_ADD, payload: qas });\n\nexport const catLoading = (f) => ({ type: ActionTypes.CAT_LOADING, payload: f });\nexport const catFailed = (errmess) => ({ type: ActionTypes.CAT_FAILED, payload: errmess });\nexport const addCats = (cats) => ({ type: ActionTypes.CAT_ADD, payload: cats });\n\nexport const catQAsLoading = (f) => ({ type: ActionTypes.CAT_QAS_LOADING, payload: f });\nexport const catQAsFailed = (errmess) => ({ type: ActionTypes.CAT_QAS_FAILED, payload: errmess });\nexport const addCatQAs = (catId, qas) => ({ type: ActionTypes.CAT_QAS_ADD, catId: catId, payload: qas });\n\nexport const filterQAs = (selectedCat) => ({ type: ActionTypes.FILTER_QAS, payload: selectedCat });","export const QAS_LOADING = 'QAS_LOADING';\nexport const QAS_FAILED = 'QAS_FAILED';\nexport const QAS_ADD = 'QAS_ADD';\n\nexport const CAT_LOADING = 'CAT_LOADING';\nexport const CAT_FAILED = 'CAT_FAILED';\nexport const CAT_ADD = 'CAT_ADD';\n\nexport const CAT_QAS_LOADING = 'CAT_QAS_LOADING';\nexport const CAT_QAS_FAILED = 'CAT_QAS_FAILED';\nexport const CAT_QAS_ADD = 'CAT_QAS_ADD';\n\nexport const FILTER_QAS = 'FILTER_QAS';","import React, { Component } from 'react';\nimport Search from './SearchComponent';\nimport Play from './PlayComponent';\nimport QADetail from './QADetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchQAs, fetchCats, filterQAs } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => ({\n  qas: state.qas,\n  cats: state.cats,\n  catQAs: state.catQAs\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchQAs: () => dispatch(fetchQAs()),\n  fetchCats: () => dispatch(fetchCats()),\n  filterQAs: (c) => dispatch(filterQAs(c))\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchQAs();\n    this.props.fetchCats();\n  }\n\n  render() {\n    const SearchPage = () => (\n      <div className=\"container\">\n        <Search appProps={this.props} />\n      </div>\n    );\n\n    const PlayPage = () => (\n      <div className=\"container\">\n        <Play appProps={this.props} />\n      </div>\n    );\n\n    const QADetailPage = ({ match }) => (\n      <QADetail qa={this.props.qas.qas.filter((qa) => qa.id === parseInt(match.params.qaId, 10))[0]}\n        isLoading={this.props.qas.isLoading}\n        errMess={this.props.qas.errMess}\n      />\n    );\n\n    const PlayQADetailPage = ({ match }) => (\n      <QADetail qa={this.props.catQAs.catQAs['c'+match.params.catId][match.params.row]}\n        isLoading={this.props.catQAs.isLoading}\n        errMess={this.props.catQAs.errMess}\n      />\n    );\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch location={this.props.location}>\n              <Route exact path='/search' component={SearchPage} />\n              <Route path='/search/:qaId' component={QADetailPage} />\n              <Route exact path='/play' component={PlayPage} />\n              <Route path='/play/:catId/:row' component={PlayQADetailPage} />\n              <Redirect to='/search' />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const QAs = (state = { isLoading: true, qas:[] }, action) => {\n        switch (action.type) {\n            case ActionTypes.QAS_LOADING: return {...state, isLoading: action.payload, errMess: null, qas: []}\n            case ActionTypes.QAS_FAILED: return {...state, isLoading: false, errMess: action.payload};\n            case ActionTypes.QAS_ADD: return {...state, isLoading: false, errMess: null, qas: action.payload};\n\n            case ActionTypes.FILTER_QAS:\n                return {...state, selectedCat: action.payload};\n\n            default:\n                return state;\n        }\n};\n\nexport const Cats = (state = { isLoading: true, cats:[]}, action) => {\n        switch (action.type) {\n            case ActionTypes.CAT_LOADING: return {...state, isLoading: action.payload, errMess: null, cats: []}\n            case ActionTypes.CAT_FAILED: return {...state, isLoading: false, errMess: action.payload};\n            case ActionTypes.CAT_ADD: return {...state, isLoading: false, errMess: null, cats: action.payload};\n\n            default:\n                return state;\n        }\n};\n\nexport const CatQAs = (state = { isLoading: true, catQAs:[]}, action) => {\n        switch (action.type) {\n            case ActionTypes.CAT_QAS_LOADING: return {...state, isLoading: action.payload, errMess: null, cats: []}\n            case ActionTypes.CAT_QAS_FAILED: return {...state, isLoading: false, errMess: action.payload};\n            case ActionTypes.CAT_QAS_ADD: \n              const qas = state.catQAs;\n              qas[\"c\"+action.catId] = action.payload.filter((a)=>a.value>0).sort((a,b)=>(a.value>b.value?1:-1));\n              return {...state, isLoading: false, errMess: null, catQAs: qas};\n\n            default:\n                return state;\n        }\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { QAs, Cats, CatQAs } from './reducers';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            qas: QAs,\n            cats: Cats,\n            catQAs: CatQAs\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}