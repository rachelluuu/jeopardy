{"version":3,"sources":["components/LoadingComponent.js","components/FilterBarComponent.js","components/SearchComponent.js","components/QADetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/qas.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","FilterBar","props","toggle","bind","catSelected","state","dropdownOpen","this","setState","prevState","e","preventDefault","newCat","currentTarget","innerText","console","log","appProps","filterQAs","JSON","stringify","items","Set","qas","map","qa","category","title","sort","cat","key","onClick","isOpen","caret","React","Component","RenderQAItem","to","id","question","Search","selectedCat","results","filter","t","isLoading","errMess","RenderQA","answer","value","airdate","QADetail","Header","isNavOpen","toggleNav","dark","expand","href","navbar","Footer","qasLoading","type","qasFailed","errmess","payload","addQAs","Main","fetchQAs","location","classNames","timeout","exact","path","component","match","parseInt","params","qaId","withRouter","connect","dispatch","fetch","serviceUrl","then","response","ok","error","Error","status","statusText","message","json","catch","c","QAs","action","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c4796c2.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass FilterBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.toggle = this.toggle.bind(this);\n    this.catSelected = this.catSelected.bind(this);\n    this.state = { dropdownOpen: false };\n  }\n\n  toggle() {\n    this.setState(prevState => ({\n      dropdownOpen: !prevState.dropdownOpen\n    }));\n  }\n\n  catSelected(e) {\n    e.preventDefault();\n    const newCat = e.currentTarget.innerText;\n    console.log(\"FilterBar new cat: \" + newCat)\n    this.props.appProps.filterQAs(newCat);\n    /*\n    this.setState({\n        selectedCat: e.currentTarget.innerText\n    });\n    */\n  }\n\n  render() {\n    console.log(\"filterBar rendering:\" + JSON.stringify(this.state));\n    const categories = [...new Set(this.props.appProps.qas.qas.map((qa)=>qa.category.title))];\n    const items = categories.sort().map((cat) => (\n        <DropdownItem key={cat} onClick={this.catSelected}>{cat}</DropdownItem>\n    ));\n    return (\n        <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\n            <DropdownToggle caret> Category </DropdownToggle>\n            <DropdownMenu>\n                {items}\n            </DropdownMenu>\n        </Dropdown>\n    );\n  }\n}\n\nexport default FilterBar;","import React from 'react';\nimport { Card, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport FilterBar from './FilterBarComponent';\n\nconst RenderQAItem = ({qa, onClick}) => (\n    <Card>\n        <Link to={`/search/${qa.id}`} >\n            <CardTitle>{qa.question}</CardTitle>\n        </Link>\n    </Card>\n);\n\nconst Search = (props) => {\n    const selectedCat = props.appProps.qas.selectedCat;\n    console.log(\"search render cat : \" + selectedCat)\n    const results = props.appProps.qas.qas\n        .filter((qa) => {\n            const t = qa.category.title;\n            return qa.question !== '' && (!selectedCat || selectedCat === t);\n        })\n        .map((qa) => {\n        return (\n            <div className=\"question col-lg-3 col-md-6 col-12\"  key={qa.id}>\n                <RenderQAItem qa={qa} onClick={props.onClick} />\n            </div>\n        );\n    });\n\n    if (props.appProps.qas.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n\n    if (props.appProps.qas.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\"> \n                    <div className=\"col-12\">\n                        <h4>{props.appProps.qas.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"filterBar row\">\n                <FilterBar appProps={props.appProps}></FilterBar>\n            </div>\n            <div className=\"row\">\n                {results}\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\nimport { Loading } from './LoadingComponent';\n\nfunction RenderQA({qa}) {\n    return (\n        /*<FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>*/\n            <Card>\n                <CardHeader className=\"bg-primary text-white\"><b>{qa.question}</b></CardHeader>\n                <CardBody>\n                    <dl className=\"row p-1\">\n                        <dt className=\"col-6\">Answer</dt>\n                        <dd className=\"col-6\"><b>{qa.answer}</b></dd>\n                        <dt className=\"col-6\">Value</dt>\n                        <dd className=\"col-6\">{qa.value}</dd>\n                        <dt className=\"col-6\">Air Date</dt>\n                        <dd className=\"col-6\">{qa.airdate}</dd>\n                    </dl>\n                </CardBody>\n            </Card>\n        /*</FadeTransform> */\n    );\n}\n\nconst QADetail = props => {\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n\n    if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">            \n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"question col-12\">\n                <RenderQA qa={props.qa} />\n            </div>\n        </div>\n        </div>\n    );\n}\n\nexport default QADetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className=\"mr-auto\" href=\"/jeopardy/\"><b>Jeopardy!</b></NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/search'><span className=\"fa fa-info fa-lg\"></span> Search</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/play'><span className=\"fa fa-list fa-lg\"></span> Play</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </div>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto\">\n                    <p>Developed by Rachel Lu</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import * as ActionTypes from './ActionTypes';\nimport { serviceUrl } from '../shared/baseUrl';\n\nexport const fetchQAs = () => (dispatch) => {\n\n    dispatch(qasLoading(true));\n\n    return fetch(serviceUrl + 'api/clues')\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } else {\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\n          error.response = response;\n          throw error;\n        }\n      },\n      error => {\n            var errmess = new Error(error.message);\n            throw errmess;\n      })\n    .then(response => response.json())\n    .then(qas => dispatch(addQAs(qas)))\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const qasLoading = () => ({\n  type: ActionTypes.QAS_LOADING\n});\n\nexport const qasFailed = (errmess) => ({\n  type: ActionTypes.QAS_FAILED,\n  payload: errmess\n});\n\nexport const addQAs = (qas) => ({\n  type: ActionTypes.ADD_QAS,\n  payload: qas\n});\n\nexport const filterQAs = (selectedCat) => ({\n  type: ActionTypes.FILTER_QAS,\n  payload: selectedCat\n});","export const QAS_LOADING = 'QAS_LOADING';\nexport const QAS_FAILED = 'QAS_FAILED';\nexport const ADD_QAS = 'ADD_QAS';\nexport const FILTER_QAS = 'FILTER_QAS';","import React, { Component } from 'react';\nimport Search from './SearchComponent';\nimport QADetail from './QADetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchQAs, filterQAs } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n  return {\n    qas: state.qas\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchQAs: () => dispatch(fetchQAs()),\n  filterQAs: (c) => dispatch(filterQAs(c))\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchQAs();\n  }\n\n  render() {\n    const SearchPage = () => (\n      <div className=\"container\">\n        <Search appProps={this.props} />\n      </div>\n    );\n\n    const QAWithIdPage = ({ match }) => (\n      <QADetail qa={this.props.qas.qas.filter((qa) => qa.id === parseInt(match.params.qaId, 10))[0]}\n        isLoading={this.props.qas.isLoading}\n        errMess={this.props.qas.errMess}\n      />\n    );\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch location={this.props.location}>\n              <Route exact path='/search' component={SearchPage} />\n              <Route path='/search/:qaId' component={QAWithIdPage} />\n              <Redirect to='/search' />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const QAs = (state = {\n    isLoading: true,\n    errMess: null,\n    selectedCat: null,\n    qas:[]\n    }, action) => {\n        switch (action.type) {\n            case ActionTypes.ADD_QAS:\n                return {...state, isLoading: false, errMess: null, qas: action.payload};\n\n            case ActionTypes.QAS_LOADING:\n                return {...state, isLoading: true, errMess: null, qas: []}\n\n            case ActionTypes.QAS_FAILED:\n                return {...state, isLoading: false, errMess: action.payload};\n\n            case ActionTypes.FILTER_QAS:\n                return {...state, selectedCat: action.payload};\n\n            default:\n                return state;\n        }\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { QAs } from './qas';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            qas: QAs\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}