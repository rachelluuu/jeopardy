{"version":3,"sources":["components/LoadingComponent.js","components/FilterBarComponent.js","components/LoadMoreComponent.js","components/SearchComponent.js","components/PlayComponent.js","components/QADetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","shared/baseUrl.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/reducers.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","msg","className","FilterBar","props","catToggle","bind","valToggle","catSelected","valSelected","state","catDropdownOpen","valDropdownOpen","this","setState","prevState","e","preventDefault","newCat","currentTarget","innerText","console","log","appProps","filterQAsByCat","newVal","filterQAsByVal","JSON","stringify","fqas","qas","filter","qa","t","category","title","v","value","question","selectedCat","selectedVal","catItems","Set","map","sort","cat","key","onClick","valItems","val","isOpen","toggle","caret","divider","React","Component","LoadMore","clicked","n","length","fetchQAs","disabled","isLoading","RenderQAItem","to","id","Search","errMess","results","catId","row","CategoryBar","cats","Play","catQAs","r","c","i","push","RenderQA","answer","airdate","QADetail","Header","isNavOpen","toggleNav","dark","expand","href","navbar","Footer","serviceUrl","fetchCatQAs","dispatch","fetch","then","response","ok","error","Error","status","statusText","message","json","addCatQAs","catch","qasFailed","qasLoading","f","type","payload","errmess","addQAs","catLoading","addCats","Main","fetchCats","location","classNames","timeout","exact","path","component","match","parseInt","params","qaId","withRouter","connect","o","offset","Math","random","a","b","clues_count","slice","QAs","action","qs","concat","Cats","CatQAs","store","createStore","combineReducers","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.782b431f.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = ({msg}) => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading {msg}. . .</p>\n        </div>\n    );\n};","import React from 'react';\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\n\nclass FilterBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.catToggle = this.catToggle.bind(this);\n    this.valToggle = this.valToggle.bind(this);\n    this.catSelected = this.catSelected.bind(this);\n    this.valSelected = this.valSelected.bind(this);\n    this.state = { catDropdownOpen: false, valDropdownOpen: false };\n  }\n\n  catToggle() { this.setState(prevState => ({ catDropdownOpen: !prevState.catDropdownOpen })); }\n  valToggle() { this.setState(prevState => ({ valDropdownOpen: !prevState.valDropdownOpen })); }\n\n  catSelected(e) {\n    e.preventDefault();\n    const newCat = e.currentTarget.innerText;\n    console.log(\"FilterBar new cat: \" + newCat)\n    this.props.appProps.filterQAsByCat(newCat === \"Clear\" ? null : newCat);\n  }\n\n  valSelected(e) {\n    e.preventDefault();\n    const newVal = e.currentTarget.innerText;\n    console.log(\"FilterBar new val: \" + newVal);\n    this.props.appProps.filterQAsByVal(newVal === \"Clear\" ? null : newVal);\n  }\n\n  render() {\n    console.log(\"filterBar rendering:\" + JSON.stringify(this.state));\n    const fqas = this.props.appProps.qas.qas\n        .filter((qa) => {\n            const t = qa.category.title;\n            const v = qa.value;\n            return qa.question !== '' && \n                (!this.props.appProps.qas.selectedCat || this.props.appProps.qas.selectedCat === t) &&\n                (!this.props.appProps.qas.selectedVal || this.props.appProps.qas.selectedVal == v);\n        });\n\n    const categories = [...new Set(fqas.map((qa)=>qa.category.title))];\n    const catItems = categories.sort().map((cat) => (\n        <DropdownItem key={cat} onClick={this.catSelected}>{cat}</DropdownItem>\n    ));\n    const values = [...new Set(fqas.map((qa)=>qa.value))];\n    const valItems = values.sort().map((val) => (\n        <DropdownItem key={val} onClick={this.valSelected}>{val}</DropdownItem>\n    ));\n    return (\n      <div className=\"row\">\n        <Dropdown isOpen={this.state.catDropdownOpen} toggle={this.catToggle}>\n            <DropdownToggle caret> Category {this.props.appProps.qas.selectedCat}</DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem key='clear' onClick={this.catSelected}>Clear</DropdownItem>\n              <DropdownItem divider />\n              {catItems}\n            </DropdownMenu>\n        </Dropdown>\n        <Dropdown isOpen={this.state.valDropdownOpen} toggle={this.valToggle}>\n            <DropdownToggle caret> Value {this.props.appProps.qas.selectedVal}</DropdownToggle>\n            <DropdownMenu>\n              <DropdownItem key='clear' onClick={this.valSelected}>Clear</DropdownItem>\n              <DropdownItem divider />\n              {valItems}\n            </DropdownMenu>\n        </Dropdown>\n      </div>\n    );\n  }\n}\n\nexport default FilterBar;","import React from 'react';\nimport { Button } from 'reactstrap';\n\nclass LoadMore extends React.Component {\n  constructor(props) {\n    super(props);\n    this.clicked = this.clicked.bind(this);\n  }\n\n  clicked(e) {\n    e.preventDefault();\n    const n = this.props.appProps.qas.qas.length;\n    this.props.appProps.fetchQAs(n);\n  }\n\n  render() {\n    console.log(\"load more: \");\n    console.log(this.props.appProps);\n    return (\n      <Button className=\"moreButton\" onClick={this.clicked} disabled={this.props.appProps.qas.isLoading} > \n        {this.props.appProps.qas.isLoading ? \"Loading...\" : \"More...\" }\n      </Button>\n    );\n  }\n}\n\nexport default LoadMore;","import React from 'react';\nimport { Card, CardBody, CardTitle } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport FilterBar from './FilterBarComponent';\nimport LoadMore from './LoadMoreComponent';\n\nconst RenderQAItem = ({ qa }) => (\n    <Card>\n        <Link to={`/search/${qa.id}`} >\n            <CardTitle>\n                {qa.category.title}\n            </CardTitle>\n            <CardBody>\n                {qa.question}\n            </CardBody>\n        </Link>\n    </Card>\n);\n\nconst Search = ({ appProps }) => {\n    if (appProps.qas.isLoading && !appProps.qas.qas) {\n        return (<div className=\"container\"> <div className=\"row\"><Loading /> </div> </div>);\n    }\n\n    if (appProps.qas.errMess) {\n        return (<div className=\"container\"> <div className=\"col-12\"> <h4>{appProps.qas.errMess}</h4> </div> </div>);\n    }\n\n    const selectedCat = appProps.qas.selectedCat;\n    const selectedVal = appProps.qas.selectedVal;\n    const results = appProps.qas.qas\n        .filter((qa) => {\n            const t = qa.category.title;\n            const v = qa.value;\n            return qa.question !== '' &&\n                (!selectedCat || selectedCat === t) &&\n                (!selectedVal || selectedVal == v);\n        })\n        .map((qa) => (\n            <div className=\"question col-lg-3 col-md-6 col-12\" key={qa.id}>\n                <RenderQAItem qa={qa} />\n            </div>\n        ));\n\n    return (\n        <div className=\"container\">\n            <div className=\"filterBar row\">\n                <FilterBar appProps={appProps} />\n            </div>\n            <div className=\"row\">\n                {results}\n            </div>\n            <div className=\"row\">\n                <LoadMore appProps={appProps} />\n            </div>\n        </div>\n    );\n}\n\nexport default Search;","import React from 'react';\nimport { Card, CardBody } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\n\nconst RenderQAItem = ({ catId, row, qa }) => (\n    <Card className=\"value col-2\">\n        <Link to={`/play/${catId}/${row}`} >\n            <CardBody>$ {qa.value}</CardBody>\n        </Link>\n    </Card>\n);\n\nconst CategoryBar = ({ cats }) => cats.map((cat) => (\n    <Card className=\"category col-2\" key={cat.id}>\n        <CardBody >{cat.title}</CardBody>\n    </Card>\n));\n\nconst Play = ({ appProps }) => {\n    console.log(\"play render \" + JSON.stringify(appProps.catQAs));\n    if (appProps.cats.isLoading)\n        return (<div className=\"container\"> <div className=\"row\"> <Loading msg=\"Categories\" /> </div> </div>);\n\n    if (appProps.catQAs.isLoading)\n        return (<div className=\"container\"> <div className=\"row\"> <Loading msg=\"Categories Questions\" /> </div> </div>);\n\n    if (appProps.cats.errMess) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{appProps.qas.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    const results = [];\n    for (let r = 0; r < 5; r++) {\n        for (let c = 0; c < 6; c++) {\n            const catId = appProps.cats.cats[c].id;\n            if (appProps.catQAs) {\n                const qas = appProps.catQAs.catQAs['c' + catId];\n                if (qas && qas[r]) {\n                    const val = (r + 1) * 200;\n                    let i = 0;\n                    while (i < qas.length && qas[i].value !== val) i++;\n                    if (i < qas.length)\n                        results.push((<RenderQAItem key={'c' + c + 'r' + r} catId={catId} row={r} qa={qas[i]} />));\n                }\n                else\n                    console.log(\"Play component failre: \", qas)\n            }\n        };\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"categoryBar row\">\n                <CategoryBar cats={appProps.cats.cats}></CategoryBar>\n            </div>\n            <div className=\"row\">\n                {results}\n            </div>\n        </div>\n    );\n}\n\nexport default Play;","import React from 'react';\nimport { Card, CardHeader, CardBody } from 'reactstrap';\n\nfunction RenderQA({qa}) {\n    return (\n        /*<FadeTransform in transformProps={{ exitTransform: 'scale(0.5) translateY(-50%)' }}>*/\n            <Card>\n                <CardHeader className=\"bg-primary text-white\"><b>{qa.question}</b></CardHeader>\n                <CardBody>\n                    <dl className=\"row p-1\">\n                        <dt className=\"col-6\">Answer</dt>\n                        <dd className=\"col-6\"><b>{qa.answer}</b></dd>\n                        <dt className=\"col-6\">Category</dt>\n                        <dd className=\"col-6\">{qa.category.title}</dd>\n                        <dt className=\"col-6\">Value</dt>\n                        <dd className=\"col-6\">{qa.value}</dd>\n                        <dt className=\"col-6\">Air Date</dt>\n                        <dd className=\"col-6\">{qa.airdate}</dd>\n                    </dl>\n                </CardBody>\n            </Card>\n        /*</FadeTransform> */\n    );\n}\n\nconst QADetail = props => \n    (\n        <div className=\"container\">\n        <div className=\"row\">\n            <div className=\"question col-12\">\n                <RenderQA qa={props.qa} />\n            </div>\n        </div>\n        </div>\n    );\n\nexport default QADetail;","import React, { Component } from 'react';\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false\n        };\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return (\n            <Navbar dark expand=\"md\">\n                <div className=\"container\">\n                    <NavbarToggler onClick={this.toggleNav} />\n                    <NavbarBrand className=\"mr-auto\" href=\"/jeopardy/\"><b>Jeopardy!</b></NavbarBrand>\n                    <Collapse isOpen={this.state.isNavOpen} navbar>\n                        <Nav navbar>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/search'><span className=\"fa fa-search fa-lg\"></span> Search</NavLink>\n                            </NavItem>\n                            <NavItem>\n                                <NavLink className=\"nav-link\" to='/play'><span className=\"fa fa-gamepad fa-lg\"></span> Play</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Collapse>\n                </div>\n            </Navbar>\n        );\n    }\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer(props) {\n    return (\n        <div className=\"footer\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-auto\">\n                    <p>Developed by Rachel Lu</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","export const baseUrl = 'http://localhost:3001/';\nexport const serviceUrl = 'https://cors-anywhere.herokuapp.com/http://jservice.io/';","import * as ActionTypes from './ActionTypes';\nimport { serviceUrl } from '../shared/baseUrl';\n\nexport const fetchQAs = (offset) => (dispatch) => {\n    dispatch(qasLoading(true));\n    console.log(\"fetchQAs: \" + offset);\n    return fetch(serviceUrl + 'api/clues?offset='+offset)\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } \n        var error = new Error('Fetching questions error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(qas => dispatch(addQAs(qas)))\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const fetchCats = (n) => (dispatch) => {\n    dispatch(catLoading(true));\n    const offset = Math.random() * 1000;\n    return fetch(serviceUrl + 'api/categories?offset=' + offset + '&count='+(n?n:100))\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } \n        var error = new Error('Fetching categories error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(cats => {\n      const c = cats.sort((a,b)=>a.clues_count<b.clues_count?1:-1).slice(0, 6); /* choose first 6 */\n      c.map((cat) => dispatch(fetchCatQAs(cat.id))); /* fetch q's for the cats */\n      return dispatch(addCats(c));\n    })\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const fetchCatQAs = (catId) => (dispatch) => {\n    return fetch(serviceUrl + 'api/clues?category='+catId)\n    .then(response => {\n        if (response.ok) {\n          return response;\n        } \n        var error = new Error('Fetching categories question error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      },\n      error => {\n        var errmess = new Error(error.message);\n        throw errmess;\n      })\n    .then(response => response.json())\n    .then(qas => dispatch(addCatQAs(catId, qas)))\n    .catch(error => dispatch(qasFailed(error.message)));\n}\n\nexport const qasLoading = (f) => ({ type: ActionTypes.QAS_LOADING, payload: f });\nexport const qasFailed = (errmess) => ({ type: ActionTypes.QAS_FAILED, payload: errmess });\nexport const addQAs = (qas) => ({ type: ActionTypes.QAS_ADD, payload: qas });\n\nexport const catLoading = (f) => ({ type: ActionTypes.CAT_LOADING, payload: f });\nexport const catFailed = (errmess) => ({ type: ActionTypes.CAT_FAILED, payload: errmess });\nexport const addCats = (cats) => ({ type: ActionTypes.CAT_ADD, payload: cats });\n\nexport const catQAsLoading = (f) => ({ type: ActionTypes.CAT_QAS_LOADING, payload: f });\nexport const catQAsFailed = (errmess) => ({ type: ActionTypes.CAT_QAS_FAILED, payload: errmess });\nexport const addCatQAs = (catId, qas) => ({ type: ActionTypes.CAT_QAS_ADD, catId: catId, payload: qas });\n\nexport const filterQAsByCat = (c) => ({ type: ActionTypes.FILTER_QAS_BYCAT, payload: c });\nexport const filterQAsByVal = (c) => ({ type: ActionTypes.FILTER_QAS_BYVAL, payload: c });","export const QAS_LOADING = 'QAS_LOADING';\nexport const QAS_FAILED = 'QAS_FAILED';\nexport const QAS_ADD = 'QAS_ADD';\n\nexport const CAT_LOADING = 'CAT_LOADING';\nexport const CAT_FAILED = 'CAT_FAILED';\nexport const CAT_ADD = 'CAT_ADD';\n\nexport const CAT_QAS_LOADING = 'CAT_QAS_LOADING';\nexport const CAT_QAS_FAILED = 'CAT_QAS_FAILED';\nexport const CAT_QAS_ADD = 'CAT_QAS_ADD';\n\nexport const FILTER_QAS_BYCAT = 'FILTER_QAS_BYCAT';\nexport const FILTER_QAS_BYVAL = 'FILTER_QAS_BYVAL';","import React, { Component } from 'react';\nimport Search from './SearchComponent';\nimport Play from './PlayComponent';\nimport QADetail from './QADetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { fetchQAs, fetchCats, filterQAsByCat, filterQAsByVal } from '../redux/ActionCreators';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => ({\n  qas: state.qas,\n  cats: state.cats,\n  catQAs: state.catQAs\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchQAs: (o) => dispatch(fetchQAs(o)),\n  fetchCats: () => dispatch(fetchCats()),\n  filterQAsByCat: (c) => dispatch(filterQAsByCat(c)),\n  filterQAsByVal: (c) => dispatch(filterQAsByVal(c))\n});\n\nclass Main extends Component {\n\n  componentDidMount() {\n    this.props.fetchQAs(0);\n    this.props.fetchCats();\n  }\n\n  render() {\n    const SearchPage = () => (\n      <div className=\"container\">\n        <Search appProps={this.props} />\n      </div>\n    );\n\n    const PlayPage = () => (\n      <div className=\"container\">\n        <Play appProps={this.props} />\n      </div>\n    );\n\n    const QADetailPage = ({ match }) => (\n      <QADetail qa={this.props.qas.qas.filter((qa) => qa.id === parseInt(match.params.qaId, 10))[0]}\n        isLoading={this.props.qas.isLoading}\n        errMess={this.props.qas.errMess}\n      />\n    );\n\n    const PlayQADetailPage = ({ match }) => (\n      <QADetail qa={this.props.catQAs.catQAs['c'+match.params.catId][match.params.row]}\n        isLoading={this.props.catQAs.isLoading}\n        errMess={this.props.catQAs.errMess}\n      />\n    );\n\n    return (\n      <div>\n        <Header />\n        <TransitionGroup>\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n            <Switch location={this.props.location}>\n              <Route exact path='/search' component={SearchPage} />\n              <Route path='/search/:qaId' component={QADetailPage} />\n              <Route exact path='/play' component={PlayPage} />\n              <Route path='/play/:catId/:row' component={PlayQADetailPage} />\n              <Redirect to='/search' />\n            </Switch>\n          </CSSTransition>\n        </TransitionGroup>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const QAs = (state = { isLoading: true }, action) => {\n        switch (action.type) {\n            case ActionTypes.QAS_LOADING: return {...state, isLoading: action.payload}\n            case ActionTypes.QAS_FAILED: return {...state, isLoading: false, errMess: action.payload};\n            case ActionTypes.QAS_ADD: \n                const qs = state.qas ? state.qas : [];\n                console.log(\"in reducer\", state);\n                return {...state, isLoading: false, errMess: null, qas: qs.concat(action.payload)};\n\n            case ActionTypes.FILTER_QAS_BYCAT: return {...state, selectedCat: action.payload};\n            case ActionTypes.FILTER_QAS_BYVAL: return {...state, selectedVal: action.payload};\n\n            default:\n                return state;\n        }\n};\n\nexport const Cats = (state = { isLoading: true, cats:[]}, action) => {\n        switch (action.type) {\n            case ActionTypes.CAT_LOADING: return {...state, isLoading: action.payload}\n            case ActionTypes.CAT_FAILED: return {...state, isLoading: false, errMess: action.payload};\n            case ActionTypes.CAT_ADD: return {...state, isLoading: false, errMess: null, cats: action.payload};\n\n            default:\n                return state;\n        }\n};\n\nexport const CatQAs = (state = { isLoading: true, catQAs:[]}, action) => {\n        switch (action.type) {\n            case ActionTypes.CAT_QAS_LOADING: return {...state, isLoading: action.payload}\n            case ActionTypes.CAT_QAS_FAILED: return {...state, isLoading: false, errMess: action.payload};\n            case ActionTypes.CAT_QAS_ADD: \n              const qas = state.catQAs;\n              qas[\"c\"+action.catId] = action.payload.filter((a)=>a.value>0).sort((a,b)=>(a.value>b.value?1:-1));\n              return {...state, isLoading: false, errMess: null, catQAs: qas};\n\n            default:\n                return state;\n        }\n};","import React, { Component } from 'react';\nimport Main from './components/MainComponent';\nimport './App.css';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Provider store={store}>\n        <HashRouter>\n          <div className=\"App\">\n            <Main />\n          </div>\n        </HashRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { QAs, Cats, CatQAs } from './reducers';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            qas: QAs,\n            cats: Cats,\n            catQAs: CatQAs\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}